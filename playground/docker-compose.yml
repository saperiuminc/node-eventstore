version: '3'
services:
  web:
    build: ./web
    command: node_modules/.bin/nodemon npm start
    volumes:
      - ./web:/app
    ports:
      - 3000:3000
    environment:
      EVENTSTORE_HOST: eventstore_server
      EVENTSTORE_PORT: 3001
    links:
      - eventstore_server
    depends_on:
      - eventstore_server

  eventstore_server:
    build: ./eventstore-server
    command: 'bash start.sh redis:6379 db:3306'
    volumes:
      - ./eventstore-server:/app
      - ../:/app/node_modules/@saperiuminc/eventstore
    ports:
      - 3000
      - 5858
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      EVENTSTORE_MYSQL_HOST: db
      EVENTSTORE_MYSQL_PORT: 3306
      EVENTSTORE_MYSQL_USERNAME: root
      EVENTSTORE_MYSQL_PASSWORD: root
      EVENTSTORE_MYSQL_DATABASE: eventstore
      ENABLE_TRACING: 'true'
      TRACER_NAME: 'jaeger'
      JAEGER_SERVICE_NAME: eventstore-playground
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_HOST: 6832
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_SAMPLER_MANAGER_HOST_PORT: http://jaeger:5778/sampling
      DEBUG: ''
      AWS_XRAY_DAEMON_ADDRESS: xray:2000
      AWS_XRAY_TRACING_NAME: 'eventstore' # need to set as root segment name
    links:
      - redis
      - db
      - xray
    depends_on:
      - redis
      - db
      - xray

  redis:
    image: redis:5.0
    restart: always
    ports:
      - 6379:6379

  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eventstore
      MYSQL_USER: root
      MYSQL_PASSWORD: root

  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
        - 5775:5775/udp
        - 6831:6831/udp
        - 6832:6832/udp
        - 5778:5778
        - 9411:9411
        - 14268:14268
        - 16686:16686
    # environment:
    #     LOG_LEVEL: debug

  # For Local Testing.  
  # Need to set AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_REGION outside. 
  # e.g. AWS_ACCESS_KEY_ID=access AWS_SECRET_ACCESS_KEY=key AWS_REGION=us-west-2 docker-compose up
  # or you can export the env in your favorite shell like zsh and update the startup file (like .zshrc) 
  # to include the new keys
  # e.g. export AWS_ACCESS_KEY_ID=access AWS_SECRET_ACCESS_KEY=key AWS_REGION=us-west-2
  xray:     
    image: namshi/aws-xray
    ports:
      - '2000:2000/udp'
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION